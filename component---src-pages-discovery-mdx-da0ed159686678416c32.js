(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{RCCg:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l})),n.d(t,"_frontmatter",(function(){return h}));n("rzGZ"),n("Dq+y"),n("8npG"),n("Ggvi"),n("E5k/");var a=n("q1tI"),o=n.n(a),i=n("6qfE"),r=n("Bl7J"),s=n("Wbzz"),c=n("vrFN"),p=n("BXTI");var m={},l=function(e){var t,n;function a(t){var n;return(n=e.call(this,t)||this).layout=r.a,n}return n=e,(t=a).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n,a.prototype.render=function(){var e=this.props,t=e.components,n=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return o.a.createElement(i.MDXTag,{name:"wrapper",Layout:this.layout,layoutProps:Object.assign({},m,n),components:t},o.a.createElement(c.a,{title:"Discovery",keywords:["oauth","authorization","security"]}),o.a.createElement(i.MDXTag,{name:"h1",components:t},"Discovery"),o.a.createElement(i.MDXTag,{name:"p",components:t},"By design, the XYZ protocol minimizes the need for any pre-flight discovery. To start things off, the client only needs to know the transaction endpoint of the server, everything else can be negotiated dynamically. For example, the client indicates all of its supported interaction modes for a given transaction request, and the AS responds to whichever ones from that set that it supports with the appropriate information for that interaction mode."),o.a.createElement(i.MDXTag,{name:"p",components:t},"Even so, the protocol allows for some additional discovery mechanisms."),o.a.createElement(i.MDXTag,{name:"h2",components:t},"Capabilities"),o.a.createElement(i.MDXTag,{name:"p",components:t},"For managing extensions, the ",o.a.createElement(i.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"capabilities")," section of the ",o.a.createElement(s.Link,{to:"transactionrequest.mdx"},"transaction request")," allows a client to specify the set of things that it can do:"),o.a.createElement(p.a,{from:"client",to:"as",language:"json",code:{capabilities:["foo","bar","extension-B"]}}),o.a.createElement(i.MDXTag,{name:"p",components:t},"The AS responds with the subset of those things that it supports:"),o.a.createElement(p.a,{from:"as",to:"client",language:"json",code:{capabilities:["foo","extension-B"]}}),o.a.createElement(i.MDXTag,{name:"p",components:t},"The AS can never add something to the list that the client didn't send. With the example above, even if the AS supports ",o.a.createElement(i.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"extension-A")," it cannot put that in the response as that was not indicated by the client as a capability."),o.a.createElement(i.MDXTag,{name:"h2",components:t},"Options Discovery"),o.a.createElement(i.MDXTag,{name:"p",components:t},"The client can also send an HTTP ",o.a.createElement(i.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"OPTIONS")," request to the transaction endpoint to get a JSON document describing the server. "),o.a.createElement(p.a,{from:"client",to:"as",language:"http",codeString:"OPTIONS /transaction HTTP/1.1\nHost: server.example.com"}),o.a.createElement(p.a,{from:"as",to:"client",language:"json",code:{capabilities:["foo","extension-A","extension-B"],interact_methods:["callback","redirect","user_code"],key_proofs:["jwsd","mtls","httpsig","dpop","oauthpop","jws"],tx_endpoint:"http://host.docker.internal:9834/api/as/transaction"}}),o.a.createElement(i.MDXTag,{name:"p",components:t},"Clients can use this information to pre-configure an optimized request to the AS, if desired. However, note that this method of discovery is not required to start a transaction."))},a}(o.a.Component),h={}}}]);
//# sourceMappingURL=component---src-pages-discovery-mdx-da0ed159686678416c32.js.map