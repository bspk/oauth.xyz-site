{"version":3,"sources":["webpack:///./src/pages/discovery.mdx"],"names":["layoutProps","MDXContent","props","layout","DefaultLayout","render","this","components","name","Layout","Object","assign","title","keywords","parentName","to","from","language","code","capabilities","codeString","React","Component","_frontmatter"],"mappings":"8TAQA,IAAMA,EAAc,GACCC,E,oBACnB,WAAYC,GAAO,aACjB,cAAMA,IAAN,MACKC,OAASC,IAFG,E,0GAKnBC,OAAA,WAAS,MAIHC,KAAKJ,MAFPK,EAFK,EAELA,WACGL,E,oIAHE,mBAKP,OAAO,kBAAC,SAAD,CAAQM,KAAK,UAAUC,OAAQH,KAAKH,OAAQH,YAAaU,OAAOC,OAAO,GAAIX,EAAaE,GAAQK,WAAYA,GAIjH,kBAAC,IAAD,CAAKK,MAAM,YAAYC,SAAU,CAAC,QAAS,gBAAiB,cAC5D,kBAAC,SAAD,CAAQL,KAAK,KAAKD,WAAYA,GAA9B,aACA,kBAAC,SAAD,CAAQC,KAAK,IAAID,WAAYA,GAA7B,qcACA,kBAAC,SAAD,CAAQC,KAAK,IAAID,WAAYA,GAA7B,0EACA,kBAAC,SAAD,CAAQC,KAAK,KAAKD,WAAYA,GAA9B,gBACA,kBAAC,SAAD,CAAQC,KAAK,IAAID,WAAYA,GAA7B,gCAA0E,kBAAC,SAAD,CAAQC,KAAK,aAAaD,WAAYA,EAAYO,WAAW,KAA7D,gBAA1E,mBAAwL,kBAAC,OAAD,CAAMC,GAAG,0BAAT,uBAAxL,iEACA,kBAAC,IAAD,CAAMC,KAAK,SAASD,GAAG,KAAKE,SAAS,OAAOC,KAAM,CAChDC,aAAc,CAAC,MAAO,MAAO,kBAE/B,kBAAC,SAAD,CAAQX,KAAK,IAAID,WAAYA,GAA7B,qEACA,kBAAC,IAAD,CAAMS,KAAK,KAAKD,GAAG,SAASE,SAAS,OAAOC,KAAM,CAChDC,aAAc,CAAC,MAAO,kBAExB,kBAAC,SAAD,CAAQX,KAAK,IAAID,WAAYA,GAA7B,2HAAqK,kBAAC,SAAD,CAAQC,KAAK,aAAaD,WAAYA,EAAYO,WAAW,KAA7D,eAArK,gGACA,kBAAC,SAAD,CAAQN,KAAK,KAAKD,WAAYA,GAA9B,qBACA,kBAAC,SAAD,CAAQC,KAAK,IAAID,WAAYA,GAA7B,oCAA8E,kBAAC,SAAD,CAAQC,KAAK,aAAaD,WAAYA,EAAYO,WAAW,KAA7D,WAA9E,uFACA,kBAAC,IAAD,CAAME,KAAK,SAASD,GAAG,KAAKE,SAAS,OAAOG,WAAU,4DAEtD,kBAAC,IAAD,CAAMJ,KAAK,KAAKD,GAAG,SAASE,SAAS,OAAOC,KAAM,CAChD,aAAgB,CAAC,MAAO,cAAe,eACvC,iBAAoB,CAAC,WAAY,WAAY,aAC7C,WAAc,CAAC,OAAQ,OAAQ,UAAW,OAAQ,WAAY,OAC9D,YAAe,yDAEjB,kBAAC,SAAD,CAAQV,KAAK,IAAID,WAAYA,GAA7B,uL,GAvCkCc,IAAMC,WA4CjCC,EAAe","file":"component---src-pages-discovery-mdx-da0ed159686678416c32.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/Users/jricher/Projects/oauth.xyz-site/src/components/layout.js\";\nimport { Link } from 'gatsby';\nimport SEO from '../components/seo';\nimport Code from '../components/code';\nconst layoutProps = {};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = DefaultLayout;\n  }\n\n  render() {\n    const {\n      components,\n      ...props\n    } = this.props;\n    return <MDXTag name=\"wrapper\" Layout={this.layout} layoutProps={Object.assign({}, layoutProps, props)} components={components}>\n\n\n\n      <SEO title=\"Discovery\" keywords={['oauth', 'authorization', 'security']} />\n      <MDXTag name=\"h1\" components={components}>{`Discovery`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`By design, the XYZ protocol minimizes the need for any pre-flight discovery. To start things off, the client only needs to know the transaction endpoint of the server, everything else can be negotiated dynamically. For example, the client indicates all of its supported interaction modes for a given transaction request, and the AS responds to whichever ones from that set that it supports with the appropriate information for that interaction mode.`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`Even so, the protocol allows for some additional discovery mechanisms.`}</MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Capabilities`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`For managing extensions, the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`capabilities`}</MDXTag>{` section of the `}<Link to=\"transactionrequest.mdx\">{`transaction request`}</Link>{` allows a client to specify the set of things that it can do:`}</MDXTag>\n      <Code from=\"client\" to=\"as\" language='json' code={{\n        capabilities: ['foo', 'bar', 'extension-B']\n      }} />\n      <MDXTag name=\"p\" components={components}>{`The AS responds with the subset of those things that it supports:`}</MDXTag>\n      <Code from=\"as\" to=\"client\" language='json' code={{\n        capabilities: ['foo', 'extension-B']\n      }} />\n      <MDXTag name=\"p\" components={components}>{`The AS can never add something to the list that the client didn't send. With the example above, even if the AS supports `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`extension-A`}</MDXTag>{` it cannot put that in the response as that was not indicated by the client as a capability.`}</MDXTag>\n      <MDXTag name=\"h2\" components={components}>{`Options Discovery`}</MDXTag>\n      <MDXTag name=\"p\" components={components}>{`The client can also send an HTTP `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`OPTIONS`}</MDXTag>{` request to the transaction endpoint to get a JSON document describing the server. `}</MDXTag>\n      <Code from=\"client\" to=\"as\" language='http' codeString={`OPTIONS /transaction HTTP/1.1\nHost: server.example.com`} />\n      <Code from=\"as\" to=\"client\" language='json' code={{\n        \"capabilities\": [\"foo\", \"extension-A\", \"extension-B\"],\n        \"interact_methods\": [\"callback\", \"redirect\", \"user_code\"],\n        \"key_proofs\": [\"jwsd\", \"mtls\", \"httpsig\", \"dpop\", \"oauthpop\", \"jws\"],\n        \"tx_endpoint\": \"http://host.docker.internal:9834/api/as/transaction\"\n      }} />\n      <MDXTag name=\"p\" components={components}>{`Clients can use this information to pre-configure an optimized request to the AS, if desired. However, note that this method of discovery is not required to start a transaction.`}</MDXTag>\n           </MDXTag>;\n  }\n\n}\nexport const _frontmatter = {};\n    "],"sourceRoot":""}