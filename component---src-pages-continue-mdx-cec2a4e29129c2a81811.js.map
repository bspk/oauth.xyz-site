{"version":3,"sources":["webpack://oauth.xyz/./src/pages/continue.mdx","webpack://oauth.xyz/./src/components/header.js","webpack://oauth.xyz/./src/components/layout.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","title","keywords","parentName","to","code","isMDXComponent","menuLinks","name","link","location","className","style","margin","color","textDecoration","src","alt","map","class","children","maxWidth","padding","paddingTop"],"mappings":"4QAYaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,yBACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAK5E,QAAC,IAAD,CAAKC,MAAM,uBAAuBC,SAAU,CAAC,QAAS,gBAAiB,YAAaF,QAAQ,SAC5F,2CACA,oNACA,mBACE,cAAIG,WAAW,MAAf,8CAAkE,QAAC,KAAD,CAAMC,GAAG,eAAeJ,QAAQ,QAAhC,eAAlE,mBACA,cAAIG,WAAW,MAAf,sFACA,cAAIA,WAAW,MAAf,mHAEF,QAAC,IAAD,CAAiBH,QAAQ,qBACzB,4CACA,iHAAmG,sBAAYG,WAAW,KAAvB,UAAnG,qEACA,QAAC,IAAD,CAAME,KAAM,CACV,aAAgB,wBACfL,QAAQ,UACX,kMAAoL,QAAC,KAAD,CAAMI,GAAG,eAAeJ,QAAQ,QAAhC,eAApL,4BACA,2CACA,iLAAmK,sBAAYG,WAAW,KAAvB,gBAAnK,SAAoO,sBAAYA,WAAW,KAAvB,WAApO,qDACA,2DAA6C,sBAAYA,WAAW,KAAvB,QAA7C,+GACA,gGAAkF,sBAAYA,WAAW,KAAvB,UAAlF,sDACA,mDACA,sIAAwH,sBAAYA,WAAW,KAAvB,UAAxH,sCACA,+BACA,2FAA6E,QAAC,KAAD,CAAMC,GAAG,YAAYJ,QAAQ,QAA7B,YAA7E,oDAAwL,sBAAYG,WAAW,KAAvB,YAAxL,kLACA,qCACA,sHAAwG,sBAAYA,WAAW,KAAvB,YAAxG,4BAAwL,QAAC,KAAD,CAAMC,GAAG,YAAYJ,QAAQ,QAA7B,YAAxL,oGAKJH,EAAWS,gBAAiB,G,0FClDtBC,G,QAAY,CACZ,CACEC,KAAM,UACNC,KAAM,aAER,CACED,KAAM,WACNC,KAAM,cAER,CACED,KAAM,WACNC,KAAM,cAER,CACED,KAAM,cACNC,KAAM,iBAER,CACED,KAAM,OACNC,KAAM,UAER,CACED,KAAM,SACNC,KAAM,YAER,CACED,KAAM,YACNC,KAAM,eAER,CACED,KAAM,cACNC,KAAM,WAER,CACED,KAAM,QACNC,KAAM,aAiCd,EA7Be,SAAC,GAAD,EAAGC,SAAH,OACb,uBAAKC,UAAU,UACb,uBAAKA,UAAU,WACb,sBAAIC,MAAO,CAAEC,OAAQ,IACnB,gBAAC,KAAD,CACET,GAAG,IACHQ,MAAO,CACLE,MAAO,QACPC,eAAgB,SAGlB,uBAAKC,IAAI,WAAWC,IAAI,MAAMN,UAAU,SAP1C,2BAWE,2BAEIJ,EAAUW,KAAI,SAAAT,GAAI,OACd,gBAAC,KAAD,CAAML,GAAIK,EAAKA,MAAM,iCAArB,IAA2CA,EAAKD,WAK9D,uBAAKW,MAAM,aCvCf,EApBe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACT,gCACE,gBAAC,EAAD,MACA,uBACER,MAAO,CACLC,OAAQ,SACRQ,SAAU,IACVC,QAAS,wBACTC,WAAY,IAGbH","file":"component---src-pages-continue-mdx-cec2a4e29129c2a81811.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jricher/Projects/oauth.xyz-site/src/components/layout.js\";\nimport { Link } from 'gatsby';\nimport ContinueRequest from '../components/continue';\nimport SEO from '../components/seo';\nimport Code from '../components/code';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <SEO title=\"Continuation Request\" keywords={['oauth', 'authorization', 'security']} mdxType=\"SEO\" />\n    <h1>{`Continuation Request`}</h1>\n    <p>{`A continuation request is a form of request that continues the transaction for one of a number of reasons, based on the kind of interaction pattern that the client is capable of performing. `}</p>\n    <ul>\n      <li parentName=\"ul\">{`The client has received a callback during `}<Link to=\"/interaction\" mdxType=\"Link\">{`Interaction`}</Link>{` with the user`}</li>\n      <li parentName=\"ul\">{`The client is waiting for the user to take some action and is polling the request`}</li>\n      <li parentName=\"ul\">{`The client has received information in response to a server challenge that will allow the request to progress`}</li>\n    </ul>\n    <ContinueRequest mdxType=\"ContinueRequest\" />\n    <h2>{`Interaction Reference`}</h2>\n    <p>{`If the client instance has received an interaction reference through one of the interaction `}<inlineCode parentName=\"p\">{`finish`}</inlineCode>{` mechanisms, the client will send that reference back to the AS.`}</p>\n    <Code code={{\n      \"interact_ref\": \"4IFWWIKYBC2PQ6U56NL1\"\n    }} mdxType=\"Code\" />\n    <p>{`Note that the client instance has to validate the interaction hash before sending this reference back or else leave itself open to several forms of injection attack. Se the `}<Link to=\"/interaction\" mdxType=\"Link\">{`interaction`}</Link>{` page for more details.`}</p>\n    <h2>{`Continuation Updates`}</h2>\n    <p>{`If the client instance wants to request additional access token rights or additional subject information, the client instance can do so by sending the same `}<inlineCode parentName=\"p\">{`access_token`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`subject`}</inlineCode>{` fields as it would inside the initial request. `}</p>\n    <p>{`The client instance could also send a `}<inlineCode parentName=\"p\">{`user`}</inlineCode>{` field if it has learned additional information about the current user that it wants to present to the AS.`}</p>\n    <p>{`The continuation request is tied to a specific client instance, and so the `}<inlineCode parentName=\"p\">{`client`}</inlineCode>{` field can't be sent in any continuation request.`}</p>\n    <h2>{`Canceling an Ongoing Request`}</h2>\n    <p>{`If the client instance wants to cancel an ongoing request, whether it's been granted or not, it can send an HTTP `}<inlineCode parentName=\"p\">{`DELETE`}</inlineCode>{` request to the continuation URL.`}</p>\n    <h2>{`Response`}</h2>\n    <p>{`The AS responds to a transaction continuation request with a standard `}<Link to=\"/response\" mdxType=\"Link\">{`response`}</Link>{`. Note that the AS can respond with a different `}<inlineCode parentName=\"p\">{`continue`}</inlineCode>{` field than that used in the transaction continuation request, in which case the client instance needs to use the new values of the access token and uri within that section.`}</p>\n    <h2>{`Authentication`}</h2>\n    <p>{`A continuation request is always authenticated using the continuation access token issued in the `}<inlineCode parentName=\"p\">{`continue`}</inlineCode>{` section of the initial `}<Link to=\"/response\" mdxType=\"Link\">{`response`}</Link>{`. Since this token is always bound to the client instance's key, this request is always signed.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { Link, graphql } from 'gatsby'\nimport { Location } from '@reach/router';\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst menuLinks = [\n      {\n        name: 'Request',\n        link: '/request/'\n      },\n      {\n        name: 'Continue',\n        link: '/continue/'\n      },\n      {\n        name: 'Response',\n        link: '/response/'\n      },\n      {\n        name: 'Interaction',\n        link: '/interaction/'\n      },\n      {\n        name: 'Keys',\n        link: '/keys/'\n      },\n      {\n        name: 'Tokens',\n        link: '/tokens/'\n      },\n      {\n        name: 'Discovery',\n        link: '/discovery/'\n      },\n      {\n        name: 'Other Specs',\n        link: '/specs/'\n      },\n      {\n        name: 'About',\n        link: '/about/'\n      },\n]\n\nconst Header = ({ location }) => (\n  <div className=\"header\">\n    <div className=\"wrapper\">\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          <img src=\"/xyz.png\" alt=\"XYZ\" className=\"logo\" />\n          XYZ: Implementing GNAP\n        </Link>\n      </h1>\n          <nav>\n            {\n              menuLinks.map(link =>\n                  <Link to={link.link}><span>&raquo;</span> {link.name}</Link>\n              )\n            }\n          </nav>\n    </div>\n    <div class=\"subnav\">\n            \n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n      <>\n        <Header/>\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}